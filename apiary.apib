FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Reddiful

Reddiful is a simple API allowing consumers to view reddit metadata

## Subreddit Collection [/subreddits/{subreddit}]
+ Parameters
    + subreddit (string) - name of the subreddit

+ Attributes
    + name: news (string) - subreddit name
    + count_subscribers (number) - number of subscribers to subreddit
    + count_visitors (number) - number of visitors to subreddit
    + moderators (array) - list of moderators of subreddit
    + sidebar_info (string) - subreddit rules, links, descriptions
    + tabs: hot, new, rising, controversial, gilded, promoted (array) - tabs in a subreddit
### List All Subreddits [GET]

+ Response 200 (application/json)

        [
            {
                "name": "news",
                "count_subscribers": 13366459,
                "count_visitors": 7501,
                "moderators":[
                    "luster",
                    "ani625",
                    "CandyManCan"
                ],
                "sidebar_info": " real news articles, primarily but not exclusively, news relating to the United State ,
                "tabs": [
                    "Hot",
                    "New",
                    "Rising",
                    "Controversial",
                    "Gilded",
                    "Promoted"
                ]
            },
            {
                "subreddit": "aww",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

## Users Collection [/users/{user}]
+ Parameters
    + user (string) - name of the account

+ Attributes
    + name: john_doe (string) - account name
    + post_karma (number) - total post karma generated by this user
    + comment_karma (number) - total comment karma generated by this user
    + creation_time (string) - time the account was registered
    + trophy_case (array) - trophies earned by the account
    + tabs: overview, comments, submitted, gilded (array) - tabs in a subreddit

### List All Users [GET]

+ Response 200 (application/json)

        [
            {
                "name": "john_doe",
                "post_karma": 9001,
                "comment_karma": 9001,
                "creation_time": "2016-02-02T12:34:56.789Z",
                "trophy_case": [
                    "Verified Email Address",
                    "One-Year Club"
                ],
                "tabs": [
                    "Overview",
                    "Comments",
                    "Submitted",
                    "Gilded"
                ]
            },
            {
                "user": "what_is_this",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]

## Posts Collection [/posts/{post}]
+ Parameters
    + post (string) - title of the post

+ Attributes
    + title: me_irl (string) - title of the post
    + type: image, text, GIF (string) - type of the post
    + karma (number) - karma of the post
    + post_time (string) - time of the post's post
    + author (string) - author of the post
    + gilded (boolean) - is the post gilded
    + nsfw (boolean) - is the post nsfw

### List All Posts [GET]

+ Response 200 (application/json)

        [
            {
                "title": "me_irl",
                "type": "image",
                "karma": 106,
                "post_time": "2017-03-03T05:55:55.555Z",
                "author": "john_doe",
                "gilded": true,
                "nsfw": false
            },
            {
                "post": "another one",
                "published_at": "2015-08-05T08:40:51.620Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]
        
## Comment Collection [/comments/{comment}]
+ Parameters
    + comment (string) - body of the comment

+ Attributes
    + text: me_irl (string) - body of the comment
    + karma (number) - karma of the comment
    + comment_time (string) - time of the comment's post
    + author (string) - author of the comment
    + gilded (boolean) - is the comment gilded

### List All Comments [GET]

+ Response 200 (application/json)

        [
            {
                "text": "me_irl",
                "karma": "image",
                "comment_time": "2017-03-03T05:55:55.555Z",
                "author": "john_doe",
                "gilded": false
            },
            {
                "comment": "haha me too",
                "published_at": "2017-03-04T02:34:43.210Z",
                "choices": [
                    {
                        "choice": "Swift",
                        "votes": 2048
                    }, {
                        "choice": "Python",
                        "votes": 1024
                    }, {
                        "choice": "Objective-C",
                        "votes": 512
                    }, {
                        "choice": "Ruby",
                        "votes": 256
                    }
                ]
            }
        ]